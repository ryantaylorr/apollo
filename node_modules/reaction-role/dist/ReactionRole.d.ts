import { Logger } from "@hammerhq/logger";
import { Database } from "bookman";
import { Client } from "discord.js";
import { IClickable, IConfig, IConstructorOptions, IMessage, TOnDeleteEvent, TOnGetFN, TOnSetFN } from "./types";
export declare class ReactionRole extends Client {
    logger: Logger;
    ready: boolean;
    database: Database;
    config: IConfig;
    private _token;
    private _db_config;
    private logging;
    private on_get?;
    private on_set?;
    private on_delete?;
    constructor({ token, db_config, logging }: IConstructorOptions);
    onGet(on_get: TOnGetFN): ReactionRole;
    onSet(on_set: TOnSetFN): ReactionRole;
    onDelete(on_delete: TOnDeleteEvent): ReactionRole;
    createOption: (clickable: IClickable) => IClickable;
    createMessage(message: IMessage): Promise<IMessage>;
    deleteMessage(message_id: string): Promise<IConfig>;
    importConfig(config: IConfig): Promise<IConfig>;
    exportConfig: () => IConfig;
    init(): Promise<string>;
    reInit(): Promise<ReactionRole>;
}
