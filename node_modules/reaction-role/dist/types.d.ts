import { BookmanOptions } from "bookman";
import { GuildMember } from "discord.js";
export interface IDBOptions extends BookmanOptions {
    prefix: string;
}
export interface IConstructorOptions {
    token: string;
    db_config?: IDBOptions;
    logging?: boolean;
}
export declare const default_db_config: IDBOptions;
export declare enum EType {
    NORMAL = 0,
    ONCE = 1,
    REMOVE = 2,
    CUSTOM = 3
}
export interface IClickable {
    add_message?: string;
    remove_message?: string;
    roles: string[];
    type: EType;
    onClick?: TClickableFN;
    onRemove?: TClickableFN;
    clickable_id: string;
}
export interface IMessage {
    channel_id: string;
    message_id: string;
    limit?: number;
    clickables: IClickable[];
}
export interface IConfig {
    [message_id: string]: IMessage;
}
export type TClickableFN = (clickable: IClickable, member: GuildMember) => any;
export type TOnGetFN = () => IConfig | Promise<IConfig> | undefined;
export type TOnSetFN = (config: IConfig) => IConfig | Promise<IConfig> | undefined;
export type TOnDeleteEvent = (message_id: string) => void | Promise<void>;
